{"version":3,"sources":["components/ToDoList/style.js","components/ToDoList/ToDoListTitle/style.js","components/ToDoList/ToDoListTitle/index.js","components/ToDoList/NewItemBox/style.js","components/ToDoList/NewItemBox/index.js","components/ToDoList/List/style.js","components/ToDoList/List/index.js","components/ToDoList/index.js","App.js","index.js"],"names":["Div","styled","div","Title","h1","ToDoListTitle","props","text","InputText","input","NewItemBox","useState","setText","autoFocus","autofocus","type","placeholder","defaultPhrase","value","onChange","e","target","onKeyPress","key","onEnter","ItemList","ul","Item","li","order","done","EmptyListText","h2","List","listEndRef","useRef","useEffect","current","scrollTop","Number","MAX_SAFE_INTEGER","list","length","ref","map","item","onClick","onItemClick","handleItemClick","title","ToDoList","setList","newItem","newList","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEaA,EAAMC,IAAOC,IAAV,qMCAHC,EAAQF,IAAOG,GAAV,4F,OCQHC,EARO,SAACC,GACrB,OACE,cAACH,EAAD,UACGG,EAAMC,QCHAC,EAAYP,IAAOQ,MAAV,+KC2BPC,EAxBI,SAACJ,GAAW,IAAD,EACJK,mBAAS,IADL,mBACrBJ,EADqB,KACfK,EADe,KAY5B,OACE,cAACJ,EAAD,CACEK,UAAWP,EAAMQ,UACjBC,KAAMT,EAAMS,MAAQ,OACpBC,YAAaV,EAAMW,eAAiB,sBACpCC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOR,EAAQQ,EAAEC,OAAOH,QAClCI,WAhBmB,SAACF,GACR,UAAVA,EAAEG,KAAmBhB,IACnBD,EAAMkB,SACRlB,EAAMkB,QAAQjB,GAEhBK,EAAQ,SCXDa,EAAWxB,IAAOyB,GAAV,8JASRC,EAAO1B,IAAO2B,GAAV,8JAIK,SAAAtB,GAAK,OAAIA,EAAMuB,MAAQ,IAAM,EAAI,OAAS,UAC3C,SAAAvB,GAAK,OAAIA,EAAMwB,KAAO,eAAiB,UAI/CC,EAAgB9B,IAAO+B,GAAV,qNCoBXC,EArCF,SAAC3B,GACZ,IAAM4B,EAAaC,iBAAO,MAM1BC,qBAAU,WAHRF,EAAWG,QAAQC,UAAYC,OAAOC,mBAKrC,CAAClC,EAAMmC,KAAKC,SAQf,OACE,eAACjB,EAAD,CAAUkB,IAAKT,EAAf,UAE0B,IAAtB5B,EAAMmC,KAAKC,QACX,cAACX,EAAD,2DAEDzB,EAAMmC,KAAKG,KAAI,SAACC,EAAMtB,GAAP,OACZ,cAACI,EAAD,CAEEmB,QAAS,kBAfK,SAAAvB,GAClBjB,EAAMyC,aACRzC,EAAMyC,YAAYxB,GAaGyB,CAAgBzB,IAC/BO,KAAMe,EAAKf,KACXD,MAAON,EAJT,SAMGsB,EAAKI,OALD1B,UCSF2B,EA/BE,WAAO,IAAD,EACGvC,mBAAS,IADZ,mBACd8B,EADc,KACRU,EADQ,KAkBrB,OACE,eAACnD,EAAD,WACE,cAAC,EAAD,CAAeO,KAAM,qBACrB,cAAC,EAAD,CACEO,WAAS,EACTG,cAAc,kCACdO,QArBY,SAAA4B,GAChB,IAAMC,EAAO,YAAOZ,GACpBY,EAAQC,KAAK,CACXL,MAAOG,EACPtB,MAAM,IAERqB,EAAQE,MAiBN,cAAC,EAAD,CAAMZ,KAAMA,EAAMM,YAdC,SAAAxB,GACrB,IAAM8B,EAAO,YAAOZ,GACpBY,EAAQ9B,GAAKO,MAAQuB,EAAQ9B,GAAKO,KAClCqB,EAAQE,UCbGE,EANH,WACV,OACE,cAAC,EAAD,KCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.70b5c127.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 400px;\n  max-width: 100vw;\n  min-height: 500px;\n  border-radius: 20px;\n  background-color: #fff;\n  padding: 20px;\n`;","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin: 0;\n  margin: 10px 10px 20px;\n  align-self: center;\n`;","import { Title } from './style';\n\nconst ToDoListTitle = (props) => {\n  return (\n    <Title>\n      {props.text}\n    </Title>\n  );\n};\n\nexport default ToDoListTitle;","import styled from 'styled-components';\n\nexport const InputText = styled.input `\n  width: 300px;\n  max-width: 80%;\n  align-self: center;\n  border: 2px solid #000;\n  border-radius: 5px;\n  padding: 15px;\n  font-size: 17px;\n`;","import { useState } from 'react';\nimport {\n  InputText\n} from './style';\n\nconst NewItemBox = (props) => {\n  const [text, setText] = useState('');\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && text) {\n      if (props.onEnter) {\n        props.onEnter(text);\n      };\n      setText('');\n    };\n  };\n\n  return (\n    <InputText\n      autoFocus={props.autofocus}\n      type={props.type || 'text'}\n      placeholder={props.defaultPhrase || 'Digite alguma coisa'}\n      value={text}\n      onChange={(e) => setText(e.target.value)}\n      onKeyPress={handleKeyPress}\n    />\n  );\n};\n\nexport default NewItemBox;","import styled from 'styled-components';\n\nexport const ItemList = styled.ul `\n  border-top: 1px solid #000;\n  margin: 20px 0;\n  padding: 20px;\n  list-style: none;\n  overflow-y: scroll;\n  height: 300px;\n`;\n\nexport const Item = styled.li `\n  padding: 10px;\n  margin: 5px 0;\n  border-radius: 5px;\n  background-color: ${props => props.order % 2 === 0 ? '#ddd' : '#ccc'};\n  text-decoration: ${props => props.done ? 'line-through' : 'none'};\n  cursor: pointer;\n`;\n\nexport const EmptyListText = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 90%;\n  text-align: center;\n  font-size: 16px;\n  font-weight: normal;\n  color: #777;\n`;","import { useEffect, useRef } from 'react';\nimport {ItemList, Item, EmptyListText} from './style';\n\nconst List = (props) => {\n  const listEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    listEndRef.current.scrollTop = Number.MAX_SAFE_INTEGER;\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [props.list.length])\n\n  const handleItemClick = key => {\n    if (props.onItemClick) {\n      props.onItemClick(key);\n    };\n  };\n\n  return (\n    <ItemList ref={listEndRef}>\n      {\n        props.list.length === 0 &&\n        <EmptyListText>Adicione um item para vÃª-lo aparecer aqui</EmptyListText>\n      }\n      {props.list.map((item, key) => \n          <Item\n            key={key}\n            onClick={() => handleItemClick(key)}\n            done={item.done}\n            order={key}\n          >\n            {item.title}\n          </Item>\n      )}\n    </ItemList>\n  );\n};\n\nexport default List;","import { useState } from 'react';\nimport { Div } from './style';\nimport ToDoListTitle from './ToDoListTitle';\nimport NewItemBox from './NewItemBox';\nimport List from './List';\n\nconst ToDoList = () => {\n  const [list, setList] = useState([]);\n\n  const addAction = newItem => {\n    const newList = [...list];\n    newList.push({\n      title: newItem,\n      done: false,\n    });\n    setList(newList);\n  };\n\n  const itemDoneToggle = key => {\n    const newList = [...list];\n    newList[key].done = !newList[key].done;\n    setList(newList);\n  };\n\n  return (\n    <Div>\n      <ToDoListTitle text={'Lista de Tarefas'} />\n      <NewItemBox\n        autofocus\n        defaultPhrase='Adicione um item e aperte ENTER'\n        onEnter={addAction}\n      />\n      <List list={list} onItemClick={itemDoneToggle}/>\n    </Div>\n  );\n};\n\nexport default ToDoList;","import { ToDoList } from './components/';\n\nconst App = () => {\n  return (\n    <ToDoList />\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}